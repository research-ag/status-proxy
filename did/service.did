type CanisterStatus = record {
  memory_metrics : MemoryMetrics;
  status : variant { stopped; stopping; running };
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  query_stats : QueryStats;
  idle_cycles_burned_per_day : nat;
  module_hash : opt blob;
  reserved_cycles : nat
};
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  reserved_cycles_limit : nat;
  log_visibility : variant {
    controllers;
    public;
    allowed_viewers : vec principal
  };
  wasm_memory_limit : nat;
  memory_allocation : nat;
  compute_allocation : nat
};
type MemoryMetrics = record {
  wasm_binary_size : nat;
  wasm_chunk_store_size : nat;
  canister_history_size : nat;
  stable_memory_size : nat;
  snapshots_size : nat;
  wasm_memory_size : nat;
  global_memory_size : nat;
  custom_sections_size : nat
};
type QueryStats = record {
  response_payload_bytes_total : nat;
  num_instructions_total : nat;
  num_calls_total : nat;
  request_payload_bytes_total : nat
};

service : () -> {
  loadState : (principal) -> (nat64, CanisterStatus);
  queryState : (principal) -> (opt record { nat64; CanisterStatus }) query;
  restartCleanupScheduleTimer : () -> ()
}
